# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
name: Rust CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Dependencies
        run: sudo apt install libdbus-1-dev pkg-config

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install Dependencies
        run: sudo apt install libdbus-1-dev pkg-config
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install Dependencies
        run: sudo apt install libdbus-1-dev pkg-config

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  coverage:
    name: coverage tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 30

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Dependencies
        run: sudo apt install libdbus-1-dev pkg-config

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: '-- --test-threads 1'

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v5
        with:
          token: ${{secrets.CODECOV_TOKEN}}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: cobertura.xml
  crossbuild:
    name: Build Windows
    runs-on: ubuntu-latest
    if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=x86_64-pc-windows-gnu
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: windows-binary
          path: target/x86_64-pc-windows-gnu/release/hrv-rs*
  build:
    name: Build Linux
    runs-on: ubuntu-latest
    if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          override: true
      - name: Install Dependencies
        run: sudo apt install libdbus-1-dev pkg-config
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release 
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: linux-binary
          path: target/release/hrv-rs*
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build, crossbuild]
    if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 30
      - name: Download Linux Binary
        uses: actions/download-artifact@v4
        with:
          name: linux-binary
          path: binaries/

      - name: Download Windows Binary
        uses: actions/download-artifact@v4
        with:
          name: windows-binary
          path: binaries/

      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

      - name: Upload Release Assets
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: binaries/
          asset_name: hrv-rs-binaries
          asset_content_type: application/zip